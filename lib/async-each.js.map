{"version":3,"file":"async-each.js","sources":["../src/index.ts"],"sourcesContent":["export type TAsyncEachStatus<T, R> = {\n  progress: number;\n  total: number;\n  percent: number;\n  item: T;\n  index: number;\n  result: R;\n};\n\ntype TCallbackFn<T, R> = (\n  item: T,\n  index: number,\n  items: Array<T>\n) => Promise<R> | R;\n\nexport type TAsyncEachStatusCallbackFn<T, R> = (\n  status: TAsyncEachStatus<T, R>\n) => void;\n\nfunction asyncEach<T, R>(\n  items: Array<T>,\n  callbackFn: TCallbackFn<T, R>,\n  statusCallbackFn: TAsyncEachStatusCallbackFn<T, R> = () => {}\n): Promise<Array<R>> {\n  let progress: number = 0;\n  const total: number = items.length;\n\n  const promises = items.map((item: T, index: number, items: Array<T>) => {\n    return new Promise<R>(async (resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const result = await callbackFn(item, index, items);\n\n          resolve(result);\n\n          statusCallbackFn({\n            progress: progress++,\n            total,\n            percent: Math.floor((100 * progress) / total),\n            item,\n            index,\n            result,\n          });\n        } catch (err) {\n          reject(err);\n        }\n      }, 0);\n    });\n  });\n\n  // This will reject if any promise fails.\n  return Promise.all(promises);\n}\n\nexport default asyncEach;\n"],"names":["items","callbackFn","statusCallbackFn","progress","total","length","promises","map","item","index","Promise","resolve","reject","setTimeout","_temp","then","result","percent","Math","floor","_catch","err","e","all"],"mappings":"eAmBA,SACEA,EACAC,EACAC,QAAqD,IAArDA,IAAAA,EAAqD,WAAK,GAE1D,IAAIC,EAAmB,EACjBC,EAAgBJ,EAAMK,OAEtBC,EAAWN,EAAMO,IAAI,SAACC,EAASC,EAAeT,GAClD,OAAO,IAAIU,QAAkBC,SAAAA,EAASC,GAAU,IAkBxC,OAjBNC,WAAU,WAAA,IAAYC,IAAAA,0BAChBJ,QAAAC,QACmBV,EAAWO,EAAMC,EAAOT,IAAMe,KAAA,SAA7CC,GAENL,EAAQK,GAERd,EAAiB,CACfC,SAAUA,IACVC,MAAAA,EACAa,QAASC,KAAKC,MAAO,IAAMhB,EAAYC,GACvCI,KAAAA,EACAC,MAAAA,EACAO,OAAAA,GACC,4DAbeI,CAChB,EAaH,SAAQC,GACPT,EAAOS,EACR,GAAA,OAAAX,QAAAC,QAAAG,GAAAA,EAAAC,KAAAD,EAAAC,KAAA,mBAAA,EACH,CAAC,MAAAO,GAAA,OAAAZ,QAAAE,OAAAU,EAAA,CAAA,EAAE,GAAGZ,QAAAC,SACR,CAAC,MAAAW,GAAA,OAAAZ,QAAAE,OAAAU,EAAA,CAAA,EACH,GAGA,OAAOZ,QAAQa,IAAIjB,EACrB"}