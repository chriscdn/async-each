{"version":3,"file":"async-each.modern.js","sources":["../src/index.ts"],"sourcesContent":["import { Semaphore } from \"@chriscdn/promise-semaphore\";\n\nexport type AsyncEachStatus<T, R> = {\n  progress: number;\n  total: number;\n  percent: number;\n  item: T;\n  index: number;\n  result: R;\n};\n\ntype CallbackFn<T, R> = (\n  item: T,\n  index: number,\n  items: Array<T>,\n) => Promise<R> | R;\n\ntype Options = {\n  rateLimit?: number;\n};\n\nexport type AsyncEachStatusCallbackFn<T, R> = (\n  status: AsyncEachStatus<T, R>,\n) => void;\n\nconst asyncEach = <T, R>(\n  items: Array<T>,\n  callbackFn: CallbackFn<T, R>,\n  statusCallbackFn: AsyncEachStatusCallbackFn<T, R> = () => {},\n  options: Options = {},\n): Promise<Array<R>> => {\n  let progress: number = 0;\n  const total: number = items.length;\n\n  const rateLimit = options.rateLimit ?? 0;\n  const semaphore = rateLimit > 0 ? new Semaphore(rateLimit) : null;\n\n  const promises = items.map((item: T, index: number, items: Array<T>) => {\n    return new Promise<R>(async (resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await semaphore?.acquire();\n\n          const result = await callbackFn(item, index, items);\n\n          resolve(result);\n\n          statusCallbackFn({\n            progress: progress++,\n            total,\n            percent: Math.floor((100 * progress) / total),\n            item,\n            index,\n            result,\n          });\n        } catch (err) {\n          reject(err);\n        } finally {\n          semaphore?.release();\n        }\n      }, 0);\n    });\n  });\n\n  // This will reject if any promise fails.\n  return Promise.all(promises);\n};\n\nexport default asyncEach;\n"],"names":["asyncEach","items","callbackFn","statusCallbackFn","options","_options$rateLimit","progress","total","length","rateLimit","semaphore","Semaphore","promises","map","item","index","Promise","async","resolve","reject","setTimeout","acquire","result","percent","Math","floor","err","release","all"],"mappings":"wDAyBM,MAAAA,EAAYA,CAChBC,EACAC,EACAC,EAAoDA,OACpDC,EAAmB,CAAE,KACAC,IAAAA,EACrB,IAAIC,EAAmB,EACvB,MAAMC,EAAgBN,EAAMO,OAEtBC,EAA6BJ,OAApBA,EAAGD,EAAQK,WAASJ,EAAI,EACjCK,EAAYD,EAAY,EAAI,IAAIE,EAAUF,GAAa,KAEvDG,EAAWX,EAAMY,IAAI,CAACC,EAASC,EAAed,IACvC,IAAAe,QAAWC,MAAOC,EAASC,KACpCC,WAAWH,UACT,UACiB,MAATP,OAAS,EAATA,EAAWW,WAEjB,MAAMC,QAAepB,EAAWY,EAAMC,EAAOd,GAE7CiB,EAAQI,GAERnB,EAAiB,CACfG,SAAUA,IACVC,QACAgB,QAASC,KAAKC,MAAO,IAAMnB,EAAYC,GACvCO,OACAC,QACAO,UAEH,CAAC,MAAOI,GACPP,EAAOO,EACR,CAAA,QACU,MAAThB,GAAAA,EAAWiB,SACZ,GACA,MAKP,OAAOX,QAAQY,IAAIhB"}